{"name": "test_2", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "request = <SubRequest 'req' for <Function test_2>>\n\n    @pytest.fixture()\n    def req(request):\n        logger = logging.getLogger()\n        logger.info(request.function.__name__)\n        file_name = str(request.function.__name__)[5:]\n>       params = utils.generate_data_from_excel(file_name)\n\n..\\conftest.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\utils\\__init__.py:17: in generate_data_from_excel\n    logger.info('============path:',str(path))\nC:\\Users\\xiaomai\\AppData\\Local\\Programs\\Python\\Python38\\lib\\logging\\__init__.py:1442: in info\n    self._log(INFO, msg, args, **kwargs)\nC:\\Users\\xiaomai\\AppData\\Local\\Programs\\Python\\Python38\\lib\\logging\\__init__.py:1585: in _log\n    self.handle(record)\nC:\\Users\\xiaomai\\AppData\\Local\\Programs\\Python\\Python38\\lib\\logging\\__init__.py:1595: in handle\n    self.callHandlers(record)\nC:\\Users\\xiaomai\\AppData\\Local\\Programs\\Python\\Python38\\lib\\logging\\__init__.py:1657: in callHandlers\n    hdlr.handle(record)\nC:\\Users\\xiaomai\\AppData\\Local\\Programs\\Python\\Python38\\lib\\logging\\__init__.py:950: in handle\n    self.emit(record)\nC:\\Users\\xiaomai\\AppData\\Local\\Programs\\Python\\Python38\\lib\\logging\\__init__.py:1089: in emit\n    self.handleError(record)\nC:\\Users\\xiaomai\\AppData\\Local\\Programs\\Python\\Python38\\lib\\logging\\__init__.py:1081: in emit\n    msg = self.format(record)\nC:\\Users\\xiaomai\\AppData\\Local\\Programs\\Python\\Python38\\lib\\logging\\__init__.py:925: in format\n    return fmt.format(record)\nC:\\Users\\xiaomai\\AppData\\Local\\Programs\\Python\\Python38\\lib\\logging\\__init__.py:664: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <LogRecord: root, 20, D:\\pythonProject\\EasyTest\\test_interface\\utils\\__init__.py, 17, \"============path:\">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\nC:\\Users\\xiaomai\\AppData\\Local\\Programs\\Python\\Python38\\lib\\logging\\__init__.py:369: TypeError"}, "attachments": [{"name": "log", "source": "b9e0679b-fb37-44cd-ad55-44e35e59f7a1-attachment.txt", "type": "text/plain"}], "start": 1663054702225, "stop": 1663054702225, "uuid": "d099422b-f27a-4a71-a636-735a073aca73", "historyId": "caafd05eca1bc4c281bac3eae1fa815c", "testCaseId": "e44471d624f251e9e0c1e6d6bb49ddbf", "fullName": "test_interface.test_cases.test_demo#test_2", "labels": [{"name": "parentSuite", "value": "test_interface.test_cases"}, {"name": "suite", "value": "test_demo"}, {"name": "host", "value": "202107001624"}, {"name": "thread", "value": "17036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_interface.test_cases.test_demo"}]}